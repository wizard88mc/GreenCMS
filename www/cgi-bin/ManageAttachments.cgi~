#!/usr/bin/perl

use CGI qw(:standard);
use CGI::Carp qw(fatalsToBrowser);
use utf8;

require "GlobalVariables.pl";
require "WorkWithFiles.pl";
require "CreateSecondLevelMenu.cgi";
require "FunctionsCCS.cgi";

$CGI::POST_MAX = 1024 * 10000000;

#creazione della form per inserimento degli allegati del verbale
sub printFormInsertAttachments() {
	
	my $message = $_[0];
	if ($message ne "") {
		$message = "<div id=\"message\">$message</div>";
	}
	my $alreadyDone = $userFormInput{'attDone'};
	
	if (length($alreadyDone) == 0) {
		$alreadyDone = "<p>Nessun file caricato</p>";
	}
	
	
	my $content = <<CONTENT;
<div id="contents">
	<h1>Inserimento Allegato</h1>
	$message
	<h2>File gi√† caricati: </h2>
	$alreadyDone
	<form method="post" enctype="multipart/form-data" action="ManageAttachments.cgi" accept-charset="UTF-8">
	<fieldset>
	<legend>Allegato</legend>
	<label for="attName">Nome allegato: </label>
	<input type="text" id="attName" name="attName" value="$userFormInput{'attName'}" />
	<label for="attFile">Allegato: </label>
	<input type="file" name="attFile" id="attFile" />
	</fieldset>
	<fieldset>
	<legend class="hidden">Bottoni</legend>
	<input type="submit" class="button" value="Allega" name="submit" />
	<input type="submit" class="button" value="Reset" />
	<input type="hidden" value="$userFormInput{'CCSID'}" name="CCSID" />
	<input type="hidden" value="$userFormInput{'attDone'}" name="attDone" />
	</fieldset>
	</form>
</div>
CONTENT
	
	return $content;
	
}

#caricamento del file
sub uploadFile() {
	
	eval {
		#controllo che la descrizione del file sia lunga almeno 5 caratteri
		if (length($userFormInput{'attName'}) < 5) {
			return "Descrizione file troppo corta";
		}
		
		my $safe_filename_characters = "a-zA-Z0-9_.-";
		my ( $name, $path, $extension ) = fileparse($userFormInput{'attFile'}, '\..*' );  
		my $filename = $name . $extension; 
		
		if ($filename eq "") {
			return "File non inserito";
		}  
		
		$filename =~ tr/ /_/;  
		$filename =~ s/[^$safe_filename_characters]//g;  
		
		if ( $filename =~ /^([$safe_filename_characters]+)$/ ) {  
			$filename = $1;  
		}  
		else {  
			return "File mal rinominato";  
		}
		
		#inserisco allegato nel file XML
		my $CCSFolder = &insertAttachment($userFormInput{'attName'}, $filename, $userFormInput{'CCSID'});
		
		if ($CCSFolder != 0) {
			
			my $upload_filehandle = $page->upload("attFile"); 
			
			my $upload_dir = $siteForCGI . "documenti/verbaliccs/" . $CCSFolder;
		 
			open ( UPLOADFILE, ">$upload_dir/$filename" ) or die "$!";  
			binmode UPLOADFILE;
			
			while ( my $bytesread = read($upload_filehandle, my $buffer, 1024) ) {  
				print UPLOADFILE $buffer;  
			}  
			
			close UPLOADFILE; 
			
			chmod(0775, "$upload_dir/$filename");
			
			my $cmd = "chgrp www-data $upload_dir/$filename";
			system $cmd;
			
			$userFormInput{'attDone'} .= "$userFormInput{'attName'},";
			
			return "";
		}
		else {
			return "Problemi modifica file XML";
		}
	}
	or do { return "Porblemi nell'upload del file"; }
}


$page = new CGI;

$cookie = $page->cookie("CGISESSIONID") || undef;
if (!defined($cookie)) {
	print $page->redirect($siteForCGI . $folderBase . "reservedzone/login.html");
}


$userFormInput{'CCSID'} = $page->param('CCSID');
$userFormInput{'attName'} = $page->param('attName');
$userFormInput{'attFile'} = $page->param('attFile');
$userFormInput{'attDone'} = $page->param('attDone');

foreach $userInput (keys %userFormInput) {
	if ($userFormInput{$userInput} eq 0) {
		$userFormInput{$userInput} = "";
	}
	utf8::decode($userFormInput{$userInput});
	$userFormInput{$userInput} =~ s/\&/\&amp\;/g;
	$userFormInput{$userInput} =~ s/</\&lt\;/g;
	$userFormInput{$userInput} =~ s/>/\&gt\;/g;
}
$userFormInput{'submit'} = $page->param('submit');


$title = "Inserimento Allegato";
$content = &printFormInsertAttachments();
$secondLevel = &createSecondLevelMenu();


if ($userFormInput{'submit'} eq "Allega") {
	
	my $error = &uploadFile();
	if ($error eq "") {
		
		$content = &printFormInsertAttachments("Inserimento Avvenuto");
	}
	else {
	
		$content = &printFormInsertAttachments($error);
	}
	
}

utf8::encode($content);

$template = &openFile($siteForCGI . "reservedzone/reservedtemplate.html") or die "$!";
	
$content = $secondLevel . $content;
	
$template =~ s/<pageContent\/>/$content/g;
$template =~ s/<pageTitle\/>/$title/g;
	
print <<CONTENT;
Content-type:text/html\n\n
$template

CONTENT

